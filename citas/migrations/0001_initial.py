# Generated by Django 5.1.1 on 2025-01-12 01:11

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_cita', models.DateField()),
                ('hora_cita', models.TimeField()),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Confirmada', 'Confirmada'), ('Cancelada', 'Cancelada'), ('En Atención', 'En Atención'), ('Finalizada', 'Finalizada')], default='Pendiente', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_especialidad', models.CharField(max_length=100)),
                ('descripcion_especialidad', models.TextField()),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('fecha_modificacion', models.DateField(auto_now=True)),
                ('estado', models.CharField(choices=[('Activa', 'Activa'), ('Inactiva', 'Inactiva')], default='Activa', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Estadisticas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('nombre_reporte', models.CharField(max_length=100)),
                ('total_pacientes', models.PositiveIntegerField(default=0)),
                ('total_citas', models.PositiveIntegerField(default=0)),
                ('citas_pendientes', models.PositiveIntegerField(default=0)),
                ('citas_finalizadas', models.PositiveIntegerField(default=0)),
                ('citas_canceladas', models.PositiveIntegerField(default=0)),
                ('total_diagnosticos', models.PositiveIntegerField(default=0)),
                ('promedio_calificacion', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.BigIntegerField(unique=True)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('correo_electronico', models.EmailField(max_length=254, unique=True)),
                ('chat_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=150)),
                ('ciudad_residencia', models.CharField(blank=True, max_length=50)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Otro', 'Otro')], default='Otro', max_length=10)),
                ('tipo_usuario', models.CharField(choices=[('Administrador', 'Administrador'), ('Medico', 'Medico'), ('Secretaria', 'Secretaria'), ('Paciente', 'Paciente')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('comentario', models.TextField(blank=True, null=True)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('cita', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calificacion', to='citas.cita')),
            ],
        ),
        migrations.AddField(
            model_name='cita',
            name='especialidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='citas.especialidad'),
        ),
        migrations.CreateModel(
            name='ExamenMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examenes', to='citas.cita')),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidad', models.ManyToManyField(related_name='medicos', to='citas.especialidad')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('proximo_control', models.DateField(blank=True, null=True)),
                ('cita', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostico', to='citas.cita')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.medico')),
            ],
        ),
        migrations.AddField(
            model_name='cita',
            name='medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='citas.medico'),
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('medico', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agenda', to='citas.medico')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='fotos_perfil/')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistorialClinico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('antecedentes', models.TextField(blank=True, null=True)),
                ('alergias', models.TextField(blank=True, null=True)),
                ('enfermedades_cronicas', models.TextField(blank=True, null=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historia', to='citas.paciente')),
            ],
        ),
        migrations.AddField(
            model_name='cita',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='citas.paciente'),
        ),
        migrations.CreateModel(
            name='RecetaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicamentos', models.TextField()),
                ('indicaciones', models.TextField(blank=True, null=True)),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recetas', to='citas.cita')),
            ],
        ),
        migrations.CreateModel(
            name='Secretaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HorarioMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes')], max_length=10)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.CharField(choices=[('Disponible', 'Disponible'), ('No Disponible', 'No Disponible')], default='Disponible', max_length=20)),
                ('medico', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='citas.medico')),
            ],
            options={
                'indexes': [models.Index(fields=['fecha', 'estado'], name='citas_horar_fecha_72b5b3_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['fecha_cita', 'hora_cita', 'estado'], name='citas_cita_fecha_c_c50e2e_idx'),
        ),
    ]
